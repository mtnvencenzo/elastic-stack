# otel-collector-config.yml
receivers:
  # Accepts data from OpenTelemetry-instrumented services via OTLP over gRPC and HTTP.
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
        auth: # Adjust or remove the auth settings as needed.
          authenticator: bearertokenauth/server
      http:
        endpoint: "0.0.0.0:4318"
        auth: # Adjust or remove the auth settings as needed.
          authenticator: bearertokenauth/server
        cors:
          allowed_origins: ["https://localhost:4001"] # Adjust or remove the cors settings as needed.
          allowed_headers: ["*"]
          max_age: 600

  hostmetrics:
    collection_interval: 10m # default = 1m
    initial_delay: 1m # default = 1s
    scrapers:
      cpu:
      memory:
      disk:

processors:
  # Batches data before sending to improve efficiency and reduce API calls.
  batch:
    timeout: 10s
    send_batch_size: 100

exporters:
  # The Elastic exporter translates OpenTelemetry data to Elastic's protocol.
  otlp/elastic:
    endpoint: "http://apm-server:8200" # Target the APM Server within the Docker network.
    tls:
      insecure: true # Use this for local testing only; use proper TLS in production.

extensions:
  bearertokenauth/server: # Adjust or remove the auth settings as needed.
    tokens:
      - "9c8602c7-6108-4df7-a569-692b06b1e630" # web
      - "bd97d99d-f52d-4827-84d5-3760cbc2c8ea" # api
      - "00d164bd-2d3d-4d62-8280-e507637def73" # mcp

service:
  extensions: [bearertokenauth/server] # Adjust or remove the auth settings as needed.
  telemetry:
    logs:
      level: "debug"
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/elastic]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [batch]
      exporters: [otlp/elastic]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/elastic]
